import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import Footer from '@/components/Footer';
import Navbar from '@/components/Navbar';
import Header from '@/components/Header';
import { ErrorBoundary } from '@/components/ErrorBoundary';
import { AppConfig } from '@/config/AppConfig';
import { Providers } from './providers';

import './globals.css';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const {
    logo,
    navigation,
    title,
    header: { title: headerTitle, description: headerDescription },
    version,
    theme_color,
    locale,
    keywords,
    author,
  } = AppConfig;

  return (
    <html
      lang={locale}
      className="h-full scroll-smooth bg-white transition-opacity duration-300 ease-linear dark:bg-zinc-900"
    >
      <head>
        <link rel="icon" href="/favicon.ico" />
        <link rel="apple-touch-icon" href="/assets/logo.png" />
        <meta name="theme-color" content={theme_color} />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <meta name="description" content={headerDescription} />
        <meta name="keywords" content={keywords.join(', ')} />
        <meta name="author" content={author} />
        <meta name="application-name" content={title} />
        <meta name="msapplication-TileColor" content={theme_color} />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <div className="bg-white dark:bg-zinc-900">
          <Navbar logo={logo} navigation={navigation} title={title} />
          <Header
            title={headerTitle}
            description={headerDescription}
            badge={version}
          />
          <Providers>
            <ErrorBoundary>{children}</ErrorBoundary>
          </Providers>
          <Footer title={title} />
        </div>
      </body>
    </html>
  );
}
